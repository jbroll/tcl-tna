#!/usr/bin/env tclkit8.6
#


package require tcltest
lappend auto_path ../lib

package require tna

proc T {matrix} {							# http://wiki.tcl.tk/2748
    set res {}
    for {set j 0} {$j < [llength [lindex $matrix 0]]} {incr j} {
	set newrow {}
	foreach oldrow $matrix {
	    lappend newrow [lindex $oldrow $j]
	}
	lappend res $newrow
    }
    return $res
}
proc I { x } { set x }

foreach { types map } { { char uchar short ushort int uint long } {} { float double } { 0 0.0 3 3.0 } } {
    foreach type $types {
	foreach { indxType indx offs tx } {
		XYZ [1:2,1:3] 0 I
		ZYX [1:2,1:3] 0 T
		XYZ [2:3,2:4] 1 I
		ZYX [2:3,2:4] 1 T
	    } {

		::tcltest::test section-1 "Section 1 $type $indxType $offs" -body {
		    tna::array create a $type 5 5 -offset $offs -index $indxType

		    tna::expr "a$indx = 3"
		    a list
		} -cleanup {
		    a destroy
		} -result  [$tx [string map $map {{0 0 0 0 0} {0 3 3 0 0} {0 3 3 0 0} {0 3 3 0 0} {0 0 0 0 0}}]]
	}
    }
}


# Test "", :, *
# Test single index
# Test -x,-y index from end
# Test reverse index
# Test -* reverse

